// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NLCS.Data;

#nullable disable

namespace NLCS.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20241104064226_Add_Att_DateCompletion_DangKy")]
    partial class Add_Att_DateCompletion_DangKy
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0-preview.7.24405.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("NLCS.Models.Entities.DangKy", b =>
                {
                    b.Property<string>("SubjectID")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<int>("StudentID")
                        .HasColumnType("int");

                    b.Property<int>("DangKy_StatusId")
                        .HasColumnType("int");

                    b.Property<DateOnly?>("DateOfCompletion")
                        .HasColumnType("date");

                    b.Property<DateOnly>("DateOfRegistration")
                        .HasColumnType("date");

                    b.Property<int>("Semester")
                        .HasColumnType("int");

                    b.Property<string>("Year")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.HasKey("SubjectID", "StudentID");

                    b.HasIndex("DangKy_StatusId");

                    b.HasIndex("StudentID");

                    b.ToTable("DangKys");
                });

            modelBuilder.Entity("NLCS.Models.Entities.Faculty", b =>
                {
                    b.Property<string>("Faculty_Id")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("Faculty_Description")
                        .IsRequired()
                        .HasMaxLength(1024)
                        .HasColumnType("nvarchar(1024)");

                    b.Property<string>("Faculty_Image")
                        .IsRequired()
                        .HasMaxLength(1024)
                        .HasColumnType("nvarchar(1024)");

                    b.Property<int>("Faculty_ManagerId")
                        .HasColumnType("int");

                    b.Property<string>("Faculty_Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Faculty_Id");

                    b.HasIndex("Faculty_ManagerId");

                    b.ToTable("Faculty");
                });

            modelBuilder.Entity("NLCS.Models.Entities.GiangDay", b =>
                {
                    b.Property<string>("TeacherID")
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("SubjectID")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<int>("Semester")
                        .HasColumnType("int");

                    b.Property<string>("Year")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.HasKey("TeacherID", "SubjectID");

                    b.HasIndex("SubjectID");

                    b.ToTable("GiangDays");
                });

            modelBuilder.Entity("NLCS.Models.Entities.Manager", b =>
                {
                    b.Property<int>("Manager_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Manager_Id"));

                    b.Property<DateTime>("Manager_BornDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Manager_Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Manager_Information")
                        .IsRequired()
                        .HasMaxLength(1024)
                        .HasColumnType("nvarchar");

                    b.Property<string>("Manager_Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar");

                    b.Property<string>("Manager_Password")
                        .IsRequired()
                        .HasMaxLength(8)
                        .HasColumnType("nvarchar(8)");

                    b.Property<string>("Manager_PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<bool>("Manager_Sex")
                        .HasColumnType("bit");

                    b.Property<string>("Manager_UserName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("Manager_Id");

                    b.ToTable("Manager");
                });

            modelBuilder.Entity("NLCS.Models.Entities.Student", b =>
                {
                    b.Property<int>("Student_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Student_Id"));

                    b.Property<bool>("Gender")
                        .HasColumnType("bit");

                    b.Property<string>("Student_Address")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateOnly>("Student_DoB")
                        .HasColumnType("date");

                    b.Property<string>("Student_Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Student_Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Student_Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Student_Password")
                        .IsRequired()
                        .HasMaxLength(16)
                        .HasColumnType("nvarchar(16)");

                    b.Property<string>("Student_PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("Student_UserName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Student_Id");

                    b.ToTable("Student");
                });

            modelBuilder.Entity("NLCS.Models.Entities.Subject", b =>
                {
                    b.Property<string>("Subject_Id")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("Subject_Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Subject_Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Subject_DoiTuong")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Subject_Image")
                        .IsRequired()
                        .HasMaxLength(1024)
                        .HasColumnType("nvarchar(1024)");

                    b.Property<string>("Subject_Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar");

                    b.Property<string>("Subject_Place")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("Subject_Quantity")
                        .HasColumnType("int");

                    b.Property<int>("Subject_Time")
                        .HasColumnType("int");

                    b.HasKey("Subject_Id");

                    b.ToTable("Subject");
                });

            modelBuilder.Entity("NLCS.Models.Entities.SubjectTrainingProgram", b =>
                {
                    b.Property<string>("TPID")
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("SubjectID")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.HasKey("TPID", "SubjectID");

                    b.HasIndex("SubjectID");

                    b.ToTable("SubjectTrainingPrograms");
                });

            modelBuilder.Entity("NLCS.Models.Entities.Teacher", b =>
                {
                    b.Property<string>("Teacher_Id")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<bool>("IsAdmin")
                        .HasColumnType("bit");

                    b.Property<string>("Teacher_Degree")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Teacher_Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Teacher_FacultyID")
                        .IsRequired()
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("Teacher_Image")
                        .IsRequired()
                        .HasMaxLength(1024)
                        .HasColumnType("nvarchar(1024)");

                    b.Property<string>("Teacher_Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Teacher_Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Teacher_PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("Teacher_Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("isActive")
                        .HasColumnType("bit");

                    b.Property<bool>("isDisplay")
                        .HasColumnType("bit");

                    b.HasKey("Teacher_Id");

                    b.HasIndex("Teacher_FacultyID");

                    b.ToTable("Teacher");
                });

            modelBuilder.Entity("NLCS.Models.Entities.TrainingProgram", b =>
                {
                    b.Property<string>("TP_Id")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("TP_Desciption")
                        .IsRequired()
                        .HasMaxLength(1024)
                        .HasColumnType("nvarchar(1024)");

                    b.Property<string>("TP_FacultyId")
                        .IsRequired()
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("TP_Leader")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("TP_Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar");

                    b.Property<string>("TP_Student")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("TP_Target")
                        .IsRequired()
                        .HasMaxLength(1024)
                        .HasColumnType("nvarchar(1024)");

                    b.Property<string>("TP_Title")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("TP_TrainingForm")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("TP_Id");

                    b.HasIndex("TP_FacultyId");

                    b.ToTable("TrainingPrograms");
                });

            modelBuilder.Entity("NLCS.Models.Entities.TrangThaiDangKy", b =>
                {
                    b.Property<int>("Status_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Status_Id"));

                    b.Property<string>("Status_Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Status_Id");

                    b.ToTable("TrangThaiDangKys");
                });

            modelBuilder.Entity("SubjectTeacher", b =>
                {
                    b.Property<string>("SubjectsSubject_Id")
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("TeachersTeacher_Id")
                        .HasColumnType("nvarchar(10)");

                    b.HasKey("SubjectsSubject_Id", "TeachersTeacher_Id");

                    b.HasIndex("TeachersTeacher_Id");

                    b.ToTable("SubjectTeacher");
                });

            modelBuilder.Entity("SubjectTrainingProgram", b =>
                {
                    b.Property<string>("SubjectsSubject_Id")
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("TrainingProgramsTP_Id")
                        .HasColumnType("nvarchar(10)");

                    b.HasKey("SubjectsSubject_Id", "TrainingProgramsTP_Id");

                    b.HasIndex("TrainingProgramsTP_Id");

                    b.ToTable("SubjectTrainingProgram");
                });

            modelBuilder.Entity("NLCS.Models.Entities.DangKy", b =>
                {
                    b.HasOne("NLCS.Models.Entities.TrangThaiDangKy", "TrangThaiDangKy")
                        .WithMany("DangKy")
                        .HasForeignKey("DangKy_StatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NLCS.Models.Entities.Student", "Student")
                        .WithMany("DangKy")
                        .HasForeignKey("StudentID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NLCS.Models.Entities.Subject", "Subject")
                        .WithMany("DangKy")
                        .HasForeignKey("SubjectID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Student");

                    b.Navigation("Subject");

                    b.Navigation("TrangThaiDangKy");
                });

            modelBuilder.Entity("NLCS.Models.Entities.Faculty", b =>
                {
                    b.HasOne("NLCS.Models.Entities.Manager", "Manager")
                        .WithMany("Faculties")
                        .HasForeignKey("Faculty_ManagerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Manager");
                });

            modelBuilder.Entity("NLCS.Models.Entities.GiangDay", b =>
                {
                    b.HasOne("NLCS.Models.Entities.Subject", "subject")
                        .WithMany("GiangDays")
                        .HasForeignKey("SubjectID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NLCS.Models.Entities.Teacher", "teacher")
                        .WithMany("GiangDays")
                        .HasForeignKey("TeacherID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("subject");

                    b.Navigation("teacher");
                });

            modelBuilder.Entity("NLCS.Models.Entities.SubjectTrainingProgram", b =>
                {
                    b.HasOne("NLCS.Models.Entities.Subject", "subject")
                        .WithMany("SubjectTrainingPrograms")
                        .HasForeignKey("SubjectID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NLCS.Models.Entities.TrainingProgram", "trainingProgram")
                        .WithMany("SubjectTrainingPrograms")
                        .HasForeignKey("TPID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("subject");

                    b.Navigation("trainingProgram");
                });

            modelBuilder.Entity("NLCS.Models.Entities.Teacher", b =>
                {
                    b.HasOne("NLCS.Models.Entities.Faculty", "Facultys")
                        .WithMany("Teachers")
                        .HasForeignKey("Teacher_FacultyID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Facultys");
                });

            modelBuilder.Entity("NLCS.Models.Entities.TrainingProgram", b =>
                {
                    b.HasOne("NLCS.Models.Entities.Faculty", "Faculty")
                        .WithMany("TrainingPrograms")
                        .HasForeignKey("TP_FacultyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Faculty");
                });

            modelBuilder.Entity("SubjectTeacher", b =>
                {
                    b.HasOne("NLCS.Models.Entities.Subject", null)
                        .WithMany()
                        .HasForeignKey("SubjectsSubject_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NLCS.Models.Entities.Teacher", null)
                        .WithMany()
                        .HasForeignKey("TeachersTeacher_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SubjectTrainingProgram", b =>
                {
                    b.HasOne("NLCS.Models.Entities.Subject", null)
                        .WithMany()
                        .HasForeignKey("SubjectsSubject_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NLCS.Models.Entities.TrainingProgram", null)
                        .WithMany()
                        .HasForeignKey("TrainingProgramsTP_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("NLCS.Models.Entities.Faculty", b =>
                {
                    b.Navigation("Teachers");

                    b.Navigation("TrainingPrograms");
                });

            modelBuilder.Entity("NLCS.Models.Entities.Manager", b =>
                {
                    b.Navigation("Faculties");
                });

            modelBuilder.Entity("NLCS.Models.Entities.Student", b =>
                {
                    b.Navigation("DangKy");
                });

            modelBuilder.Entity("NLCS.Models.Entities.Subject", b =>
                {
                    b.Navigation("DangKy");

                    b.Navigation("GiangDays");

                    b.Navigation("SubjectTrainingPrograms");
                });

            modelBuilder.Entity("NLCS.Models.Entities.Teacher", b =>
                {
                    b.Navigation("GiangDays");
                });

            modelBuilder.Entity("NLCS.Models.Entities.TrainingProgram", b =>
                {
                    b.Navigation("SubjectTrainingPrograms");
                });

            modelBuilder.Entity("NLCS.Models.Entities.TrangThaiDangKy", b =>
                {
                    b.Navigation("DangKy");
                });
#pragma warning restore 612, 618
        }
    }
}
